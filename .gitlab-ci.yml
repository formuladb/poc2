stages:
  - build
  - test_mem
  - bundle
  - build_images_and_deploy_dev
  - test_postgres
  - test_stress
  - e2e_dev_env
  - publish_static_assets
  - deploy_staging
  - e2e_demo_env
  - deploy_production
  - e2e_production_env
  - e2e_example_apps
  - cleanup
  - videos

.cache_node_modules_and_artifacts: &cache_node_modules_and_artifacts
  cache:
  #   key: ${CI_COMMIT_SHA}
  #   paths:
  #     - node_modules/
  #     - tsc-out/
  #     - dist-be/
  #     - dist-fe/

.only_for_staging_and_production: &only_for_staging_and_production
  only:
    - master
    - tags

.only_for_production: &only_for_production
  only:
    - tags

build:
  stage: build
  script:
    - npm install
    - npm run compile
  <<: *cache_node_modules_and_artifacts

bundle:
  stage: bundle
  script:
    - npm run bundle
  <<: *cache_node_modules_and_artifacts

build_images_and_deploy_dev:
  stage: build_images_and_deploy_dev
  script:
    - ./ci/jobs.sh $CI_JOB_NAME
  <<: *cache_node_modules_and_artifacts

test_mem:
  stage: test_mem
  script:
    - npm test
  <<: *cache_node_modules_and_artifacts

test_postgres:
  stage: test_postgres
  script:
    - ./ci/jobs.sh $CI_JOB_NAME
  <<: *cache_node_modules_and_artifacts

test_stress:
  stage: test_stress
  script:
    - ./ci/jobs.sh $CI_JOB_NAME
  <<: *cache_node_modules_and_artifacts

e2e_dev_env:
  stage: e2e_dev_env
  script:
    - ./ci/jobs.sh $CI_JOB_NAME
  <<: *cache_node_modules_and_artifacts

publish_static_assets:
  stage: publish_static_assets
  script:
    - ./ci/jobs.sh $CI_JOB_NAME
  <<: *cache_node_modules_and_artifacts
  <<: *only_for_staging_and_production

deploy_staging:
  stage: deploy_staging
  script:
    - ./ci/jobs.sh $CI_JOB_NAME
  environment:
    name: staging
    url: https://staging.formuladb.io
  <<: *cache_node_modules_and_artifacts
  <<: *only_for_staging_and_production

e2e_demo_env:
  stage: e2e_demo_env
  script:
    - ./ci/jobs.sh $CI_JOB_NAME
  <<: *cache_node_modules_and_artifacts
  <<: *only_for_staging_and_production

deploy_production:
  stage: deploy_production
  script:
    - ./ci/jobs.sh $CI_JOB_NAME
  environment:
    name: production
    url: https://formuladb.io
  <<: *cache_node_modules_and_artifacts
  <<: *only_for_production

e2e_production_env:
  stage: e2e_production_env
  script:
    - ./ci/jobs.sh $CI_JOB_NAME
  <<: *cache_node_modules_and_artifacts
  <<: *only_for_production

.e2e_example_apps:
  script:
    - git clone https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.com/metawiz/e2e.git

.videos:
  stage: videos
  script:
    - docker run --rm --name ci-with-video --cap-add=SYS_ADMIN --user centos -v $PWD:/home/centos/febe registry.gitlab.com/metawiz/febe/ci-with-video:1.0.1 bash -c 'source ~/.bashrc && sudo yum update -y google-chrome-stable.x86_64 && cd && cd febe/storage && npm install && cd ../core && npm install && cd ../fe/ && npm install && cd ../be/ && npm install && npm run compile && (npm run start &) && cd ../fe && npm run e2e-with-recordings-and-audio'
  artifacts:
    expire_in: 1 week
    paths:
      - fe/e2e/protractor_videos/
  only:
    refs:
      - master

cleanup:
  stage: cleanup
  script:
    - ./ci/jobs.sh $CI_JOB_NAME
  when: always
