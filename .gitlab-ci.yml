stages:
  - build
  - test_mem
  - test_fe
  - bundle
  - build_images_and_deploy_dev
  - test_postgres
  - test_stress
  - test_api
  # - e2e_dev_env
  - build_images_and_deploy_staging
  - e2e_staging
  - build_images_and_deploy_production
  - e2e_production
  # - e2e_all_example_apps
  # - e2e_staging_with_videos
  - cleanup

.cache_node_modules_and_artifacts: &cache_node_modules_and_artifacts
  cache:
    key: ${CI_COMMIT_SHA}
    paths:
      - node_modules/
      - tsc-out/
      - dist-be/
      - formuladb/
      - formuladb-env/themes/formuladb/
      - formuladb-e2e/

.only_for_staging_and_production: &only_for_staging_and_production
  only:
    - master
    - tags

.only_for_production: &only_for_production
  only:
    - tags

build:
  stage: build
  script:
    - npm install
    - npm run compile
  <<: *cache_node_modules_and_artifacts

bundle:
  stage: bundle
  script:
    - npm run bundle
  <<: *cache_node_modules_and_artifacts

build_images_and_deploy_dev:
  stage: build_images_and_deploy_dev
  script:
    - export KUBECONFIG="${PWD}/k8s/production-kube-config.conf"
    - ./ci/jobs.sh $CI_JOB_NAME
  <<: *cache_node_modules_and_artifacts

test_mem:
  stage: test_mem
  script:
    - npm test
  <<: *cache_node_modules_and_artifacts

test_fe:
  stage: test_fe
  script:
    - npm run test:fe
  <<: *cache_node_modules_and_artifacts

test_postgres:
  stage: test_postgres
  script:
    - export KUBECONFIG="${PWD}/k8s/production-kube-config.conf"
    - ./ci/jobs.sh $CI_JOB_NAME
  <<: *cache_node_modules_and_artifacts

test_stress:
  stage: test_stress
  retry: 2
  script:
    - export KUBECONFIG="${PWD}/k8s/production-kube-config.conf"
    - ./ci/jobs.sh $CI_JOB_NAME
  <<: *cache_node_modules_and_artifacts

test_api:
  stage: test_stress
  script:
    - bash api-tests.sh
  artifacts:
    reports:
      junit: api-tests.junit.xml
    when: always    
  <<: *cache_node_modules_and_artifacts

.e2e_dev_env:
  stage: e2e_dev_env
  retry: 2
  script:
    - export KUBECONFIG="${PWD}/k8s/production-kube-config.conf"
    - ./ci/jobs.sh $CI_JOB_NAME
  <<: *cache_node_modules_and_artifacts

build_images_and_deploy_staging:
  stage: build_images_and_deploy_staging
  script:
    - export KUBECONFIG="${PWD}/k8s/production-kube-config.conf"
    - ./ci/jobs.sh $CI_JOB_NAME
  environment:
    name: staging
    url: https://staging.formuladb.io
  <<: *cache_node_modules_and_artifacts
  <<: *only_for_staging_and_production

e2e_staging:
  stage: e2e_staging
  script:
    - export KUBECONFIG="${PWD}/k8s/production-kube-config.conf"
    - ./ci/jobs.sh $CI_JOB_NAME
  <<: *cache_node_modules_and_artifacts
  <<: *only_for_staging_and_production

build_images_and_deploy_production:
  stage: build_images_and_deploy_production
  script:
    - export KUBECONFIG="${PWD}/k8s/production-kube-config.conf"
    - ./ci/jobs.sh $CI_JOB_NAME
  environment:
    name: production
    url: https://formuladb.io
  <<: *cache_node_modules_and_artifacts
  <<: *only_for_production

e2e_production:
  stage: e2e_production
  script:
    - export KUBECONFIG="${PWD}/k8s/production-kube-config.conf"
    - ./ci/jobs.sh $CI_JOB_NAME
  <<: *cache_node_modules_and_artifacts
  <<: *only_for_production

.e2e_all_example_apps:
  script:
    - git clone https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.com/metawiz/e2e.git

.e2e_staging_with_videos:
  stage: e2e_staging_with_videos
  script:
    - export KUBECONFIG="${PWD}/k8s/production-kube-config.conf"
    - ./ci/jobs.sh $CI_JOB_NAME
  artifacts:
    expire_in: 1 week
    paths:
      - e2e/protractor_videos/
  <<: *cache_node_modules_and_artifacts
  <<: *only_for_staging_and_production

cleanup:
  stage: cleanup
  script:
    - export KUBECONFIG="${PWD}/k8s/production-kube-config.conf"
    - ./ci/jobs.sh $CI_JOB_NAME
  when: always
