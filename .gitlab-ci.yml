stages:
  - npminstall
  - buildprodimages
  - build
  - test
  - cleanup
  - videos

npminstall:
  stage: npminstall
  script:
    - cd storage && npm install 
    - cd ..
    - cd core && npm install 
    - cd ..
    - cd be && npm install
    - cd ..
    - cd fe && npm install
  cache:
    key: ${CI_COMMIT_SHORT_SHA}
    paths:
      - core/node_modules/
      - storage/node_modules/
      - be/node_modules/
      - fe/node_modules/

buildprodimages:
  stage: buildprodimages
  script:
    - docker build -t formuladb-minio -f Dockerfile.minio .
    - docker tag formuladb-minio registry.gitlab.com/metawiz/febe/formuladb-minio:${CI_COMMIT_TAG}
    - docker push registry.gitlab.com/metawiz/febe/formuladb-minio:${CI_COMMIT_TAG}
    - cd be
    - npm run build-prod
    - cd ../fe
    - npm run build-high-memory -- --prod --source-map --deploy-url=/formuladb/ --base-href=/formuladb/
    - cd ..
    - docker build -t formuladb-sourcemaps -f Dockerfile.map .
    - docker tag formuladb-sourcemaps registry.gitlab.com/metawiz/febe/formuladb-sourcemaps:${CI_COMMIT_TAG}
    - docker push registry.gitlab.com/metawiz/febe/formuladb-sourcemaps:${CI_COMMIT_TAG}
    - cd be
    - docker build -t formuladb-be .
    - docker tag formuladb-be registry.gitlab.com/metawiz/febe/formuladb-be:${CI_COMMIT_TAG}
    - docker push registry.gitlab.com/metawiz/febe/formuladb-be:${CI_COMMIT_TAG}
    - cd ../fe
    - rm dist/fe/*.js.map
    - docker build -t formuladb-fe .
    - docker tag formuladb-fe registry.gitlab.com/metawiz/febe/formuladb-fe:${CI_COMMIT_TAG}
    - docker push registry.gitlab.com/metawiz/febe/formuladb-fe:${CI_COMMIT_TAG}
  cache:
    key: ${CI_COMMIT_SHORT_SHA}
    paths:
      - core/node_modules/
      - storage/node_modules/
      - be/node_modules/
      - fe/node_modules/
  only:
    - tags

build:
  stage: build
  script:
    - npm run db
    - cd be
    - npm run compile
    - cd ..
    - cd fe
    - npm run build
    - cd ..
  cache:
    key: ${CI_COMMIT_SHORT_SHA}
    paths:
      - core/node_modules/
      - storage/node_modules/
      - be/node_modules/
      - be/dist/
      - fe/node_modules/
  
test:
  stage: test
  script:
    - docker-compose up -d db
    - cd be
    - true || npm test
    - FRMDB_STORAGE=postgres true || npm test
    - npm run start &
    - while ! nc -z localhost 3000 </dev/null; do echo "Waiting for BE ..."; sleep 1; done
    - cd ..
    - cd fe
    - true || npm run e2e
    - killall node --quiet || true
  cache:
    key: ${CI_COMMIT_SHORT_SHA}
    paths:
      - core/node_modules/
      - storage/node_modules/
      - be/node_modules/
      - be/dist/
      - fe/node_modules/

videos:
  stage: videos
  script:
    - docker run --rm --name ci-with-video --cap-add=SYS_ADMIN --user centos -v $PWD:/home/centos/febe registry.gitlab.com/metawiz/febe/ci-with-video:1.0.1 bash -c 'source ~/.bashrc && sudo yum update -y google-chrome-stable.x86_64 && cd && cd febe/storage && npm install && cd ../core && npm install && cd ../fe/ && npm install && cd ../be/ && npm install && npm run compile && (npm run start &) && cd ../fe && npm run e2e-with-recordings-and-audio'
  artifacts:
    expire_in: 1 week
    paths:
      - fe/e2e/protractor_videos/
  only:
    refs:
      - master

cleanup:
  stage: cleanup
  script:
    - docker-compose down
    - docker image prune --all -f
    - killall node --quiet || true
    - rm -rf /home/gitlab-runner/cache/metawiz/febe/*
  when: always
