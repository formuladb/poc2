stages:
  - build
  - test_mem
  - test_postgres
  - stress
  - bundle
  - deploy_cluster
  - build_and_deploy
  - e2e_dev_env
  - deploy
  # - e2e_example_apps
  # - cleanup
  # - videos

build:
  stage: build
  script:
    - npm install
    - npm run compile
  cache:
    key: ${CI_COMMIT_SHORT_SHA}
    paths:
      - node_modules/
      - tsc-out/
      - dist-be/
      - dist-fe/

test_mem:
  stage: test_mem
  script:
    - npm test || true
  cache:
    key: ${CI_COMMIT_SHORT_SHA}
    paths:
      - node_modules/
      - tsc-out/


test_postgres:
  stage: test_postgres
  script:
    - docker start postgres-for-unit-tests || docker run --name postgres-for-unit-tests --rm -p 5432:5432 -e POSTGRES_PASSWORD=postgres -v pg-persistence:/var/lib/postgresql/data -d postgres:11
    - FRMDB_STORAGE=postgres npm test || true
  cache:
    key: ${CI_COMMIT_SHORT_SHA}
    paths:
      - node_modules/
      - tsc-out/

stress:
  stage: stress
  script:
    - npm test -- core/src/frmdb_engine.stress.spec.ts
    - docker start postgres-for-unit-tests || docker run --name postgres-for-unit-tests --rm -p 5432:5432 -e POSTGRES_PASSWORD=postgres -v pg-persistence:/var/lib/postgresql/data -d postgres:11
    - FRMDB_STORAGE=postgres npm test -- core/src/frmdb_engine.stress.spec.ts
  cache:
    key: ${CI_COMMIT_SHORT_SHA}
    paths:
      - node_modules/
      - tsc-out/

bundle:
  stage: bundle
  script:
    - npm run bundle
  cache:
    key: ${CI_COMMIT_SHORT_SHA}
    paths:
      - node_modules/
      - dist-be/
      - dist-fe/

deploy_cluster:
  stage: deploy_cluster
  script:
    - sh deploy-k3s.sh

build_and_deploy:
  stage: build_and_deploy
  script:
    - KUBECONFIG=`k3d get-kubeconfig` skaffold run
  cache:
    key: ${CI_COMMIT_SHORT_SHA}
    paths:
      - node_modules/
      - dist-be/
      - dist-fe/

e2e_dev_env:
  stage: e2e_dev_env
  script:
    - npm run e2e || true

deploy:
  stage: deploy
  script:
    - git clone https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.com/frmdb-apps/ci-tools.git
    - cd ci-tools
    - npm install
    - source tools.sh
    - cd ..
    # publish vvvebj on GCloud
    - NODE_PATH=ci-tools/node_modules upload-assets `find vvvebjs -type f -print`
    # publish portal on GCloud
    - NODE_PATH=ci-tools/node_modules upload-assets `find portal/public/ -type f -print`
    # publish FE on GCloud
    - mkdir -p dist/fe
    - cp fe/js/*js dist-fe/frmdb-fe.js dist-fe/frmdb-data-grid.js dist-fe/frmdb-editor.js dist/fe
    - cd dist
    - for i in `find -type f -printf '%P\n'` ; do NODE_PATH=ci-tools/node_modules upload-asset $i; done
    - cd ..
    # remote ssh on demo VM and refresh containers from latest images
    - chmod 600 ssh/frmdb.id_rsa
    # stop old compose stack (run it against existing compose.yaml to make sure we don't leave dangling containers)
    - ssh -i ssh/frmdb.id_rsa demo@formuladb.online "docker-compose down"
    # copy new compose config
    - scp -i ssh/frmdb.id_rsa docker-compose.yml demo@formuladb.online:/home/demo/docker-compose.yml
    # get latest "latest" for be
    - ssh -i ssh/frmdb.id_rsa demo@formuladb.online "FRMDB_RELEASE=${CI_COMMIT_TAG:-latest} docker-compose pull be lb"
    # bring up new stack
    - ssh -i ssh/frmdb.id_rsa demo@formuladb.online "FRMDB_RELEASE=${CI_COMMIT_TAG:-latest} docker-compose up -d db be lb"
  cache:
    key: ${CI_COMMIT_SHORT_SHA}
    paths:
      - node_modules/
      - dist-be/
      - dist-fe/
  only:
    - master

# e2e_example_apps:
#   script:
#     - git clone https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.com/metawiz/e2e.git

# videos:
#   stage: videos
#   script:
#     - docker run --rm --name ci-with-video --cap-add=SYS_ADMIN --user centos -v $PWD:/home/centos/febe registry.gitlab.com/metawiz/febe/ci-with-video:1.0.1 bash -c 'source ~/.bashrc && sudo yum update -y google-chrome-stable.x86_64 && cd && cd febe/storage && npm install && cd ../core && npm install && cd ../fe/ && npm install && cd ../be/ && npm install && npm run compile && (npm run start &) && cd ../fe && npm run e2e-with-recordings-and-audio'
#   artifacts:
#     expire_in: 1 week
#     paths:
#       - fe/e2e/protractor_videos/
#   only:
#     refs:
#       - master

# cleanup:
#   stage: cleanup
#   script:
#     - docker-compose down
#     - docker image prune --all -f
#     - killall node --quiet || true
#     - rm -rf /home/gitlab-runner/cache/metawiz/febe/*
#   when: always
