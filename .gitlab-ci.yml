stages:
  - build
  - test
  - cleanup

build:
  stage: build
  script:
    - cd storage && npm install 
    - cd ..
    - cd core && npm install 
    - cd ..
    - cd be && npm install
    - cd ..
    - cd fe && npm install
    - cd ..
    - cd be
    - npm run compile
    - docker build -t formuladb-be .
    - echo "TODO push to registry"
    - docker tag formuladb-be registry.gitlab.com/metawiz/febe/formuladb-be:0.0.1
    - docker push registry.gitlab.com/metawiz/febe/formuladb-be:0.0.1
    - cd ..
    - cd fe
    - npm run build -- --prod --deploy-url=/formuladb/ --base-href=/formuladb/ --source-map
    - docker build -t formuladb-fe .
    - docker tag formuladb-fe registry.gitlab.com/metawiz/febe/formuladb-fe:0.0.1
    - docker push registry.gitlab.com/metawiz/febe/formuladb-fe:0.0.1
  # Keep the cache to be reused in the test stage.
  # use commit id as key, we don't want to reuse cache between succesive pipelines. Or ... ?
  cache:
    key: ${CI_COMMIT_SHORT_SHA}
    paths:
      - storage/node_modules/
      - core/node_modules/
      - be/node_modules/
      - fe/node_modules/

test:
  stage: test
  script:
    - docker-compose down
    - FRMDB_RELEASE=0.0.1 docker-compose up -d
    - cd be
    - npm test
    - FRMDB_STORAGE=postgres npm test
    - cd ..
    - docker-compose down
    - docker image prune --all -f
  cache:
    key: ${CI_COMMIT_SHORT_SHA}
    paths:
      - storage/node_modules/
      - core/node_modules/
      - be/node_modules/
      - fe/node_modules/
  retry: 2


cleanup_build_job:
  stage: cleanup_build
  script:
    - docker-compose down
    - docker image prune --all -f
  when: always
