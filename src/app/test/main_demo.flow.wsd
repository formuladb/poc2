@startuml

title
System running off existing metadata and data. Nothing really special, just standard looking ERP software.
end title

actor User
box "Client"
    participant AppCmp
    participant NavCmp
    participant TableCmp
    participant FormCmp
    participant AppEff
    participant AppSt
end box
box "Server"
    participant Express
end box


note over AppSt
  router: {url: string}
  nav: {entities: Entity[]; selectedEntity: Entity;}
  table: {table: Table; tableData: DataObj[];}
  form: {form: Form; formData: DataObj;}
end note

note right of User: When_user_first_accesses_the_app
User -> AppCmp: navigate /
AppEff -> Express: /GET/mwz_api
AppEff -> AppSt: {nav: {entities}}

note right of User: Then_navigation_should_show_all_current_tables
NavCmp -> NavCmp: display sidebar

note right of User: When_user_navigates_to_a_service_form
User -> NavCmp: select ServiceForm
'if this sets up replication from the server, then perhaps it is better to be a POST becase it will allocate resources on the server
AppEff -> Express: /GET?/mwz_api/TestApp/Forms/ServiceForm?uimetadata
AppEff -> AppSt: {table, form}
AppEff -> Express: /GET/mwz_api/TestApp/Forms/ServiceForm
AppEff -> AppSt: {tableData}
User <- TableCmp: table of ServiceForms
User -> TableCmp: select ServiceForm
AppEff -> Express: /GET/mwz_api/TestApp/Forms/ServiceForm/_id

note right of User: Then_the_form_page_should_be_displayed
User <- FormCmp: edit ServiceForm

note right of User: When_user_updates_the_requested_quantity_of_a_product_list_item
note right of User: When_user_updates_the_requested_quantity_of_a_product_list_item
note right of User: Then_user_will_see_the_reserved_quantity_and_stock_computed_by_the_engine
note right of User: TODO_user_creates_new_service_form

@enduml

@startuml
title
What is special about Couldev: this standard looking ERP software is implemented using a simple language 
  accessible to business people
end title

actor User
box "Client"
    participant AppCmp
    participant ContainerCmp
    participant AppSt
    participant AppEff
end box
box "Server"
    participant Express
end box


note right of User: TODO_use_editor_to_change_order_of_columns_in_table
note right of User: TOOD_use_editor_to_change_form_layout

note right of User #aqua
So far only simple changes in the ui layout, let's see how easy it is to add new functionality to the system.
We argue it is as simple as editing a Spreadsheet/Excel, anybody who has used Excel with a few formulas can use Cloudev.
end note

note right of User: TODO_create_Revision_Entity
note right of User: TOOD_create_Revision_Form
note right of User: TODO_create_and_edit_revisions

AppEff -> Express: GET /mwz_api/path?filters
AppEff -> Express: PUT /mwz_api/path JSON
AppEff -> Express: GET /mwz_api/path?__metadata
AppEff -> Express: PUT /mwz_api/path?__metadata JSON
AppEff -> Express: GET /mwz_api/path?__uiMetadata
AppEff -> Express: PUT /mwz_api/path?__uiMetadata JSON

@enduml