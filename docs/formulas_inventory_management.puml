@startuml FormulasInventoryManagement

title Inventory Management use case \n\
This use case needs mostly transactional "reduce-like" SUM(IF) formulas


class User

Order "0..*" -up- "1" User
Receipt "0..*" -up- "1" User
Promotion "0..*" - "1" User

class Product {
    code
    name
    description
    pictures
    documents/manual
    etc...
}

class InventoryProduct {
    _id
    code+location
    received_stock
    ordered_stock
    available_stock
}
class InventoryProduct2 {
    _id
    code+location
    received_stock
    ordered_stock
    available_stock
}

class Order {
  created_by: User
  created_at: timestamp
}
class OrderItem {
    product: InventoryProduct
    quantity
}
Order "0..*" -- "1..*" InventoryProduct
(Order, InventoryProduct) .. OrderItem

class Receipt {
  created_by: User
  created_at: timestamp
}
class ReceiptItem {
    product: InventoryProduct
    quantity
}
Receipt "0..*" -- "1..*" InventoryProduct
(Receipt, InventoryProduct) .. ReceiptItem

InventoryProduct "0..*" -- "1" Product


class Transfer {
  created_by: User
  created_at: timestamp
}
class TransferItem {
    product1: InventoryProduct
    product2: InventoryProduct
    product1._id == product2._id
    quantity
}
Transfer "0..*" -- "1..*" InventoryProduct
(Transfer, InventoryProduct) .. TransferItem
Transfer "0..*" - "1..*" InventoryProduct2
(Transfer, InventoryProduct2) .. TransferItem

class Promotion-TODO {
    user: User
}

class AutomaticStockRefill-TODO
class ImportedStock-TODO

@enduml
