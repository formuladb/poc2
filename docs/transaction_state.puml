@startuml TransactionStateMachine

title Transaction State Machine

[*] --> BEGIN

BEGIN -> BEGIN: ExecutionEngine adds Operations\n to the Transaction

BEGIN --> ROLLBACK: at least one Operation\n failed for some object

BEGIN --> PRECOMMIT: ExecutionEngine finished adding Operations

state BEGIN {
  [*] --> NEW
  note right of NEW: an Operation is added\n to the Transaction
  NEW --> OK: Operation applied sucessfully\n to DataObj.mwzOps
  NEW --> FAIL: Operation failed to be applied\n to DataObj.mwzOps
  NEW --> WAIT: another transaction is keeping\n this DataObj WAIT
  WAIT -left-> OK: winning transaction chosen\n by TransactionControllers
  OK --> READY: all Operations of a Transaction are OK\n TransactionController gave goahead to READY
  FAIL --> CANCEL: TransactionController CANCEL the Transaction\n consequently all operations
  OK --> CANCEL: TransactionController CANCEL the Transaction\n consequently all operations
  READY --> DONE: Operation applied to DataObj and saved sucessfully into to DB
  DONE -> [*]
}

PRECOMMIT --> COMMIT: IMPORTANT: soluiton assumes that if at PRECOMMIT\n all Operations return READY\nthen the COMMIT cannot fail\na DONE operation cannot be rolled back

PRECOMMIT -> PRECOMMIT: PRE-COMMIT is pre-empted\n by another transaction
PRECOMMIT -left-> ROLLBACK: at least one operation is FAIL

ROLLBACK --> [*]
COMMIT --> [*]

@enduml
